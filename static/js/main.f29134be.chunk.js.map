{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/auth.js","index.js"],"names":["module","exports","Logo","props","className","classes","src","burgerLogo","alt","NavigationItems","to","exact","activeClassName","active","isAuthenticated","Toolbar","DrawerToggle","onClick","showSideDrawerHandler","style","height","DesktopOnly","isAuth","Backdrop","show","clicked","SideDrawer","attachedClasses","Close","open","Open","closed","join","marginBottom","Layout","state","showSideDrawer","SideDrawerClosedHandler","setState","SideDrawerOpenHandler","prevState","this","Content","children","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","ingredients","i","salad","push","key","bacon","cheese","meat","Burger","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","map","control","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","Button","btnType","OrderSummary","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","Spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","componentWillUnmount","interceptors","request","eject","reqInterceptor","response","resInterceptor","use","req","console","log","message","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","BurgerBuilder","purchasing","loading","purchaseHandler","history","purchaseCancelHandler","purchaseContinueHandler","initIngredients","disabledInfo","burger","orderSummary","addIngredient","removeIngredient","totalPrice","burgerBuilder","ingredientType","actions","get","then","data","catch","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","invalid","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","email","street","postCode","country","deliveryMethod","formIsValid","orderHandler","event","preventDefault","customerData","order","orderData","userId","post","inputChangedHandler","inputIdentifier","orderFormCopy","formElementCopy","target","checkValidity","rules","isValid","trim","minLength","maxLength","inputs","val","form","onSubmit","Checkout","goBack","replace","path","match","render","Order","ingredientOutput","ingredientName","Number","parseFloat","Orders","orders","fetchedOrders","id","Auth","password","isSignUp","controlsCopy","submitHandler","onAuth","switchAuthModeHandler","building","body","errorMessage","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","onTryAutoSignup","routes","component","basename","getItem","Boolean","window","location","hostname","INGREDIENT_PRICES","initialState","getPurchaseState","reducer","action","oldCount","updatedCounted","newIngredients","newPurchasable","priceAddition","oldPrice","newPrice","priceDeduction","combineReducers","burgerBuilderReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f29134be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__22GVo\",\"BreadTop\":\"BurgerIngredient_BreadTop__1TH0K\",\"Seeds1\":\"BurgerIngredient_Seeds1__2DOGL\",\"Seeds2\":\"BurgerIngredient_Seeds2__2cv4S\",\"Meat\":\"BurgerIngredient_Meat__2Yhbf\",\"Cheese\":\"BurgerIngredient_Cheese__M5SjD\",\"Salad\":\"BurgerIngredient_Salad__JUiIJ\",\"Bacon\":\"BurgerIngredient_Bacon__10Edk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2rAbn\",\"active\":\"NavigationItems_active__3v431\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__VR3L1\",\"Open\":\"SideDrawer_Open__a9Eex\",\"Close\":\"SideDrawer_Close__2jxT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__10QIs\",\"Label\":\"BuildControl_Label__23RYT\",\"Less\":\"BuildControl_Less__2oXs1\",\"More\":\"BuildControl_More__2AbI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2osx2\",\"Label\":\"Input_Label__2aXoO\",\"InputElement\":\"Input_InputElement__3XYbK\",\"Invalid\":\"Input_Invalid__3k6C7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3ZhkV\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2ffOh\",\"DrawerToggle\":\"Toolbar_DrawerToggle__3NPhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2E3QT\",\"OrderButton\":\"BuildControls_OrderButton__3364n\",\"enable\":\"BuildControls_enable__3EFZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1cCRe\",\"Success\":\"Button_Success__1lTqh\",\"Danger\":\"Button_Danger__2tGRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1TjYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2wlcY\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2kY2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__xV1a_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2kt6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__AEHvC\",\"load3\":\"Spinner_load3__1Rhcv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__XwlO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1mfkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__R0rGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__28_OZ\"};","import React from \"react\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\n//This is how to include images\r\n//Webpack will move everything around\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"></img>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n\r\n        <li><NavLink to=\"/\" exact activeClassName={classes.active}>Burger Builder</NavLink></li>\r\n\r\n        {props.isAuthenticated ? \r\n            <li><NavLink to=\"/orders\" activeClassName={classes.active}>Orders</NavLink></li> : null}\r\n\r\n        {!props.isAuthenticated ? \r\n            <li><NavLink to=\"/auth\" activeClassName={classes.active}>Log in</NavLink></li>\r\n            : <li><NavLink to=\"/logout\" activeClassName={classes.active}>Log out</NavLink></li>}\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\n\r\nconst Toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        \r\n        <div className={classes.DrawerToggle} onClick={props.showSideDrawerHandler}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n        <div style={{height : \"80%\"}}>\r\n            <Logo/>\r\n        </div>\r\n\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n  \r\n\r\n    </header>\r\n);\r\n\r\n\r\nexport default Toolbar;\r\n\r\n\r\n","import classes from \"./Backdrop.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Backdrop = (props) => (\r\n    props.show? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default Backdrop;","import React, { Fragment } from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nconst SideDrawer = (props) => {\r\n\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n\r\n            <div className={attachedClasses.join(\" \")}>\r\n\r\n                <div style={{height: \"11%\", marginBottom:\"32px\"}}>\r\n                    <Logo/>\r\n                </div>\r\n                \r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default SideDrawer;","import React, {Fragment, Component} from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\r\nimport {connect} from \"react-redux\";\r\nimport { nominalTypeHack } from \"prop-types\";\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n\r\n    SideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    SideDrawerOpenHandler = () => {\r\n\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer : !prevState.showSideDrawer}\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <Toolbar isAuth={this.props.isAuthenticated} showSideDrawerHandler={this.SideDrawerOpenHandler}/>\r\n                <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.SideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated : state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngredient.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case (\"bread-bottom\"):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case (\"bread-top\"):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            case (\"meat\"):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case (\"cheese\"):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case (\"salad\"):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            case (\"bacon\"):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case (\"default\"):\r\n                ingredient = null;\r\n                break;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type : PropTypes.string,\r\n};\r\n\r\n\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst Burger = (props) => {\r\n    \r\n    const ingredients = [];\r\n    for (let i = 0; i < props.ingredients.salad; i++) {\r\n        ingredients.push(<BurgerIngredient type=\"salad\" key={\"salad\" + i}/>);\r\n    }\r\n\r\n    for (let i = 0; i < props.ingredients.bacon; i++) {\r\n        ingredients.push(<BurgerIngredient type=\"bacon\" key={\"bacon\" + i}/>);\r\n    }\r\n\r\n    \r\n    for (let i = 0; i < props.ingredients.cheese; i++) {\r\n        ingredients.push(<BurgerIngredient type=\"cheese\" key={\"cheese\" + i}/>);\r\n    }\r\n\r\n    for (let i = 0; i < props.ingredients.meat; i++) {\r\n        ingredients.push(<BurgerIngredient type=\"meat\" key={\"meat\" + i}/>);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {ingredients.length > 0 ? ingredients : <p>Please start adding ingredients</p>}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Burger);","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst BuildControl = (props) => (\r\n\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={() => {props.added()}}>More</button>\r\n    </div>\r\n  \r\n);\r\n\r\nexport default BuildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n    {label : \"Salad\", type: \"salad\"},\r\n    {label : \"Bacon\", type: \"bacon\"},\r\n    {label : \"Cheese\", type: \"cheese\"},\r\n    {label : \"Meat\", type: \"meat\"}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n\r\n        <p><strong>Current Price: £{props.price.toFixed(2)}</strong></p>\r\n\r\n        {controls.map((control) => <BuildControl \r\n                                        key={control.label} \r\n                                        label={control.label}\r\n                                        added={() => props.ingredientAdded(control.type)}\r\n                                        removed={() => props.ingredientRemoved(control.type)}\r\n                                        disabled={props.disabled[control.type]}/>)}\r\n\r\n        \r\n\r\n        <button className={classes.OrderButton} disabled={!props.purchasable} onClick={props.ordered}>\r\n            {props.isAuth ? \"ORDER NOW\" : \"SIGN IN TO ORDER\"}\r\n        </button>\r\n\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Fragment, Component } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nclass Modal extends Component {\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                        opacity: this.props.show ? \"1\" : \"0\"\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => (\r\n    <button \r\n        disabled={props.disabled}\r\n        onClick={props.clicked} \r\n        className={[classes.Button, classes[props.btnType]].join(\" \")}>{props.children}</button>\r\n);\r\n\r\nexport default Button;","import React, { Fragment } from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\n\r\nconst OrderSummary = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients</p>\r\n            <ul>\r\n                <li>Salad : {props.ingredients.salad}</li>\r\n                <li>Bacon : {props.ingredients.bacon}</li>\r\n                <li>Cheese : {props.ingredients.cheese}</li>\r\n                <li>Meat : {props.ingredients.meat}</li>\r\n            </ul>\r\n\r\n            <p><strong>Total price: £{props.price.toFixed(2)}</strong></p>\r\n\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\n\r\nexport default OrderSummary;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL : \"https://react-my-burger-7632e.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst Spinner = (props) => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React, { Fragment, Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error : null\r\n        }\r\n\r\n    \r\n\r\n        componentWillMount() {\r\n            \r\n            this.reqInterceptor = axios.interceptors.request.use((req) => {\r\n                this.setState({error : null});\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(response => response, error => {\r\n                console.log(error);\r\n                this.setState({error : error});\r\n            });\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error : null});\r\n        }\r\n\r\n        render() {\r\n           \r\n                return (\r\n                    <Fragment>\r\n                        <Modal show={this.state.error != null} modalClosed={this.errorConfirmedHandler}>\r\n                            {this.state.error ? this.state.error.message : null}\r\n                        </Modal>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Fragment>\r\n                  \r\n                )\r\n            \r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n    }\r\n   \r\n}\r\n\r\nexport default withErrorHandler;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = \"\";\r\n        if (isSignUp) {\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCG8ZzzSkAEPaoqDAX-5WP43urWkPfDuL8\"\r\n        } else {\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCG8ZzzSkAEPaoqDAX-5WP43urWkPfDuL8\"\r\n        }\r\n\r\n        dispatch({type: actionTypes.AUTH_START})\r\n        \r\n        axios.post(url, authData)\r\n        .then(response => {\r\n\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            \r\n            //Successful login\r\n            localStorage.setItem(\"token\", response.data.idToken );\r\n            localStorage.setItem(\"expirationDate\", expirationDate);\r\n            localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n            dispatch({\r\n                type: actionTypes.AUTH_SUCCESS,\r\n                userId: response.data.localId,\r\n                token: response.data.idToken\r\n            });\r\n\r\n            dispatch(checkAuthTimeout(+response.data.expiresIn));\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch({\r\n                type: actionTypes.AUTH_FAIL,\r\n                error: error.response.data.error\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    localStorage.removeItem(\"userId\");\r\n    return {type: actionTypes.AUTH_LOGOUT};\r\n}\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n            if (new Date() < expirationDate) {\r\n\r\n                //localStorage token not yet expired\r\n                dispatch({\r\n                    type: actionTypes.AUTH_SUCCESS,\r\n                    userId: localStorage.getItem(\"userId\"),\r\n                    token: localStorage.getItem(\"token\")\r\n                });\r\n                \r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            } else {\r\n                //localStorage token expired\r\n                dispatch(logout())\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = \"addIngredient\";\r\nexport const REMOVE_INGREDIENT = \"removeIngredient\";\r\nexport const SET_INGREDIENTS = \"setIngredients\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"fetchIngredientsFailed\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";","import React, { Component, Fragment } from \"react\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    //Ingredients, price and purchasable managed by redux\r\n    state = {\r\n        purchasing: false,\r\n        loading: false,\r\n        error : false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.ingredients == null) {\r\n            this.props.initIngredients();\r\n        }\r\n       \r\n    }\r\n\r\n  \r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            //Open up the modal\r\n            this.setState({ purchasing: true });\r\n        } else {\r\n            this.props.history.push(\"/auth\");\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n\r\n        this.setState({ loading: true });\r\n\r\n        //Don't need query params since can be found from redux\r\n        this.props.history.push(\"/checkout\");\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {};\r\n\r\n        for (let key in this.props.ingredients) {\r\n            disabledInfo[key] = this.props.ingredients[key] <= 0;\r\n        }\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner/>\r\n\r\n        let orderSummary = null;\r\n\r\n        if (this.state.loading) {\r\n            orderSummary = <Spinner></Spinner>\r\n        }\r\n\r\n        \r\n        if (this.props.ingredients) {\r\n            burger = (\r\n                <Fragment>\r\n                    <Burger ingredients={this.props.ingredients} />\r\n\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.addIngredient}\r\n                        ingredientRemoved={this.props.removeIngredient}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.totalPrice}\r\n                        purchasable={this.props.purchasable}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        ordered={this.purchaseHandler}></BuildControls>\r\n                </Fragment>\r\n            );\r\n\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ingredients}\r\n                price={this.props.totalPrice}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n\r\n      \r\n        return (\r\n\r\n            <Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n\r\n                {burger}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients : state.burgerBuilder.ingredients,\r\n        totalPrice : state.burgerBuilder.totalPrice,\r\n        purchasable: state.burgerBuilder.purchasable,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token != null\r\n    }\r\n}\r\n\r\nconst mapDipatchToProps = dispatch => {\r\n    return {\r\n        addIngredient : (ingredientType) => dispatch(actions.addIngredient(ingredientType)),\r\n        removeIngredient : (ingredientType) => dispatch(actions.removeIngredient(ingredientType)),\r\n        initIngredients: () => dispatch(actions.initIngredients()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDipatchToProps) (withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (ingredientType) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientType: ingredientType\r\n    }\r\n}\r\nexport const removeIngredient = (ingredientType) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientType: ingredientType\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n\r\n\r\n    return dispatch => {\r\n\r\n        axios.get(\"/ingredients.json\")\r\n        .then(response => {\r\n            dispatch({\r\n                type: actionTypes.SET_INGREDIENTS,\r\n                ingredients: response.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: actionTypes.FETCH_INGREDIENTS_FAILED})\r\n        })\r\n    }\r\n\r\n}","\r\nimport Burger from \"../../Burger/Burger\";\r\nimport React from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.module.css\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width : \"100%\", margin: \"auto\"}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary;","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case (\"input\"):\r\n            inputElement = <input \r\n                {...props.elementConfig} \r\n                className={inputClasses.join(\" \")} \r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n            break;\r\n        case (\"textarea\"):\r\n            inputElement = <textarea \r\n                {...props.elementConfig} \r\n                className={inputClasses.join(\" \")} \r\n                value={props.value}\r\n                onChange={props.changed}/>\r\n            break;\r\n        case (\"select\"):\r\n            inputElement = (\r\n                <select className={inputClasses.join(\" \")} value={props.value} onChange={props.changed} onChange={props.changed}>\r\n\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n\r\n                </select>\r\n            )\r\n            break;\r\n        default:\r\n            inputElement = <input {...props.elementConfig} className={inputClasses.join(\" \")} value={props.value}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { Component } from \"react\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your name\"\r\n                },\r\n                value: \"\",\r\n                label:\"Name\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"email\",\r\n                    placeholder: \"Your email\"\r\n                },\r\n                value: \"\",\r\n                label:\"Email\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            },\r\n            street: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your Street\"\r\n                },\r\n                value: \"\",\r\n                label: \"Street\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            postCode: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Postcode\"\r\n                },\r\n                value: \"\",\r\n                label: \"Postcode\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Country\"\r\n                },\r\n                value: \"\",\r\n                label: \"Country\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: \"select\",\r\n                elementConfig: {\r\n                    options: [{value:\"fastest\", displayValue: \"Fastest\"},\r\n                            {value:\"cheapest\", displayValue: \"Cheapest\"}]\r\n                    \r\n                },\r\n                value: \"fastest\",\r\n                validation: {},\r\n                label: \"Delivery\",\r\n                valid: true,\r\n                touched: false\r\n            },\r\n           \r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true })\r\n\r\n        const customerData = {};\r\n        for (let key in this.state.orderForm) {\r\n            customerData[key] = this.state.orderForm[key].value;\r\n        }\r\n\r\n      \r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            orderData: customerData,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        // //Adds a node under \"orders\" in the database\r\n        axios.post(\"/orders.json?auth=\" + this.props.token, order)\r\n            .then((response) => {\r\n                this.setState({ loading: false });\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = isValid && (value.trim() !== \"\");\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = isValid && (value.length >= rules.minLength);\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = isValid && (value.length <= rules.maxLength);\r\n        }\r\n\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const orderFormCopy = {...this.state.orderForm};\r\n        const formElementCopy = {...orderFormCopy[inputIdentifier]}\r\n\r\n        formElementCopy.value = event.target.value;\r\n        formElementCopy.valid = this.checkValidity(formElementCopy.value, formElementCopy.validation);\r\n        formElementCopy.touched = true;\r\n\r\n        orderFormCopy[inputIdentifier] = formElementCopy;\r\n\r\n        let formIsValid = true;\r\n        for (let key in orderFormCopy) {\r\n            formIsValid = formIsValid && orderFormCopy[key].valid;\r\n        }\r\n\r\n        this.setState({orderForm : orderFormCopy, formIsValid: formIsValid});\r\n    }\r\n\r\n    render() {\r\n        const inputs = [];\r\n        for (let key in this.state.orderForm) {\r\n            const val = this.state.orderForm[key];\r\n\r\n            inputs.push(\r\n                <Input\r\n                    key={key}\r\n                    elementType={val.elementType}\r\n                    elementConfig={val.elementConfig}\r\n                    value={val.value}\r\n                    label={val.label}\r\n                    invalid={!val.valid}\r\n                    touched={val.touched}\r\n                    changed={(event) => this.inputChangedHandler(event, key)}/>\r\n            )\r\n        };\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {inputs}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if (this.state.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, {Component} from \"react\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport {Route} from \"react-router-dom\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelled = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinued = () => {\r\n\r\n        this.props.history.replace(\"/checkout/contact-data\");\r\n    }\r\n\r\n    render() {\r\n\r\n       \r\n        return (\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.props.ingredients}\r\n                    checkoutCancelled={this.checkoutCancelled}\r\n                    checkoutContinued={this.checkoutContinued}/>\r\n\r\n                <Route path={this.props.match.path + \"/contact-data\"} render={(props) => <ContactData {...props}/>}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients : state.burgerBuilder.ingredients,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","\r\nimport React, {Component} from \"react\";\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst Order = (props) => {\r\n\r\n\r\n    const ingredientOutput = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredientOutput.push(<li>{ingredientName} ({props.ingredients[ingredientName]})</li>)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients:</p>\r\n            <ul>\r\n                {ingredientOutput}\r\n            </ul>\r\n\r\n            <p>Price: <strong>£{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Order;","\r\nimport React, {Component} from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport {connect} from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"/orders.json?auth=\" + this.props.token + \"&orderBy=\\\"userId\\\"&equalTo=\\\"\" + this.props.userId + \"\\\"\")\r\n        .then(response => {\r\n            const fetchedOrders = [];\r\n            for (let key in response.data) {\r\n                fetchedOrders.push({...response.data[key], id:key});\r\n            }\r\n\r\n        \r\n            this.setState({loading : false, orders: fetchedOrders});\r\n        })\r\n        .catch(error => {\r\n            this.setState({loading : false});\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let orders = <Spinner/>\r\n        if (!this.state.loading) {\r\n            orders = this.state.orders.map(order => (\r\n                <Order key={order.id} ingredients={order.ingredients} price={order.price}/>\r\n            ));\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {token : state.auth.token, userId : state.auth.userId}\r\n}\r\n\r\nexport default connect(mapStateToProps)(withErrorHandler(Orders, axios));","import React, {Component, Fragment} from \"react\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Auth.module.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport {connect} from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"email\",\r\n                    placeholder: \"Mail\"\r\n                },\r\n                value: \"\",\r\n                label:\"Email\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            },\r\n\r\n            password: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"password\",\r\n                    placeholder: \"password\"\r\n                },\r\n                value: \"\",\r\n                label:\"Password\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            }\r\n        },\r\n        isSignUp: true\r\n    }\r\n\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = isValid && (value.trim() !== \"\");\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = isValid && (value.length >= rules.minLength);\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = isValid && (value.length <= rules.maxLength);\r\n        }\r\n\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const controlsCopy = {...this.state.controls};\r\n        const formElementCopy = {...controlsCopy[inputIdentifier]}\r\n\r\n        formElementCopy.value = event.target.value;\r\n        formElementCopy.valid = this.checkValidity(formElementCopy.value, formElementCopy.validation);\r\n        formElementCopy.touched = true;\r\n\r\n        controlsCopy[inputIdentifier] = formElementCopy;\r\n\r\n        this.setState({controls : controlsCopy});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignUp: !prevState.isSignUp\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.isAuthenticated) {\r\n\r\n            if (this.props.building) {\r\n                return <Redirect to=\"/checkout\"></Redirect>\r\n            } else {\r\n                return <Redirect to=\"/\"></Redirect>\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        const inputs = [];\r\n        for (let key in this.state.controls) {\r\n            const val = this.state.controls[key];\r\n\r\n            inputs.push(\r\n                <Input\r\n                    key={key}\r\n                    elementType={val.elementType}\r\n                    elementConfig={val.elementConfig}\r\n                    value={val.value}\r\n                    label={val.label}\r\n                    invalid={!val.valid}\r\n                    touched={val.touched}\r\n                    changed={(event) => this.inputChangedHandler(event, key)}/>\r\n            )\r\n        };\r\n\r\n\r\n        let body = (\r\n            <Fragment>\r\n                <h2>{this.state.isSignUp ? \"Sign Up\" : \"Sign In\"}</h2>\r\n                <form onSubmit={this.submitHandler}>\r\n                    {inputs}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n\r\n                <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>SWITCH TO {this.state.isSignUp ? \"SIGNIN\" : \"SIGNUP\"}</Button>\r\n            </Fragment>\r\n        );\r\n\r\n        if (this.props.loading) {\r\n            body = <Spinner></Spinner>\r\n        };\r\n\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = <p>{this.props.error.message}</p>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {body}\r\n                {errorMessage}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token != null,\r\n        building: state.burgerBuilder.building\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, {Component} from \"react\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.logout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport { BrowserRouter, Redirect, Route, Switch, withRouter } from \"react-router-dom\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\nimport Logout from \"./containers/Auth/Logout/Logout\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/actions/index\";\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Redirect to=\"/\"/>\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/\"/>\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <BrowserRouter basename=\"/burger-builder\">\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst initialState = {\r\n  \r\n    ingredients: null,\r\n    totalPrice: null,\r\n    purchasable: false,\r\n    error: false,\r\n    building: false\r\n    \r\n}\r\n\r\nconst getPurchaseState = (ingredients) => {\r\n    \r\n    for (let key in ingredients) {\r\n        if (ingredients[key] > 0) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT : {\r\n            const type = action.ingredientType;\r\n\r\n            //Increment ingredient count\r\n            const oldCount = state.ingredients[type];\r\n            const updatedCounted = oldCount + 1;\r\n            const newIngredients = { ...state.ingredients}\r\n            newIngredients[type] = updatedCounted;\r\n\r\n            //Set purchasable value\r\n            const newPurchasable = getPurchaseState(newIngredients);\r\n            \r\n            //Increase price\r\n            const priceAddition = INGREDIENT_PRICES[type];\r\n            const oldPrice = state.totalPrice;\r\n            const newPrice = oldPrice + priceAddition;\r\n    \r\n            return { \r\n                ...state,\r\n                ingredients: newIngredients, \r\n                totalPrice: newPrice, \r\n                purchasable: newPurchasable, \r\n                building: true \r\n            };\r\n        }\r\n\r\n        case actionTypes.REMOVE_INGREDIENT: {\r\n            const type = action.ingredientType;\r\n\r\n            //Increment ingredient count\r\n            const oldCount = state.ingredients[type];\r\n            if (oldCount <= 0) {\r\n                return state;\r\n            }\r\n\r\n\r\n            const updatedCounted = oldCount - 1;\r\n            const newIngredients = { ...state.ingredients}\r\n            newIngredients[type] = updatedCounted;\r\n\r\n            //Set purchasable value\r\n            const newPurchasable = getPurchaseState(newIngredients);\r\n            \r\n            //Decrease price\r\n            const priceDeduction = INGREDIENT_PRICES[type];\r\n            const oldPrice = state.totalPrice;\r\n            const newPrice = oldPrice - priceDeduction;\r\n\r\n            return { \r\n                ...state,\r\n                ingredients: newIngredients, \r\n                totalPrice: newPrice, \r\n                purchasable: newPurchasable,\r\n                building: true\r\n            };\r\n\r\n        }\r\n        case actionTypes.SET_INGREDIENTS: {\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                purchasable: getPurchaseState(action.ingredients),\r\n                totalPrice: 4,\r\n                error: false,\r\n                building: false\r\n            }\r\n\r\n        }\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: {\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        }\r\n\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            }\r\n        \r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false\r\n            }\r\n\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null\r\n            }\r\n    }\r\n\r\n\r\n    return state;\r\n    \r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport authReducer from \"./store/reducers/auth\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  auth : authReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}